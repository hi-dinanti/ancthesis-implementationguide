Mapping: rim-for-MedicationDispense
Id: rim
Title: "RIM Mapping"
Source: MedicationDispense
Target: "http://hl7.org/v3"
* -> "Supply[moodCode=EVN]"
* identifier -> ".id"
* partOf -> ".outboundRelationship[typeCode=COMP]/target[classCode=PROC,moodCode=EVN]"
* status -> ".statusCode"
* statusReason[x] -> ".outboundRelationship[typeCode=RSON]/target[classCode=OBS,moodCode=EVN, code=\"not done reason\"].value"
* category -> ".inboundRelationship[typeCode=COMP].source[classCode=OBS, moodCode=EVN, code=\"type of medication dispense\"].value"
* medication[x] -> ".participation[typeCode=PRD].role"
* subject -> ".participation[typeCode=SBJ].role[classCode=PAT]"
* context -> ".inboundRelationship[typeCode=COMP].source[classCode=ENC, moodCode=EVN, code=\"type of encounter or episode\"]"
* supportingInformation -> ".outboundRelationship[typeCode=PERT].target[A_SupportingClinicalStatement CMET minimal with many different choices of classCodes(ORG, ENC, PROC, SPLY, SBADM, OBS) and each of the act class codes draws from one or more of the following moodCodes (EVN, DEF, INT PRMS, RQO, PRP, APT, ARQ, GOL)]"
* performer -> ".participation[typeCode=PRF]"
* performer.function -> "participation[typeCode=PRF].functionCode"
* performer.actor -> ".role"
* location -> ".participation[typeCode=LOC].role"
* authorizingPrescription -> ".outboundRelationship[typeCode=FLFS].target[moodCode=RQO]"
* type -> ".code"
* quantity -> ".quantity"
* daysSupply -> "effectiveUseTime"
* whenPrepared -> ".effectiveTime[xmi:type=IVL_TS].low"
* whenHandedOver -> ".effectiveTime[xmi:type=IVL_TS].high"
* destination -> ".participation[typeCode=DST].role"
* receiver -> ".participation[typeCode=RCV].role"
* note -> ".inboundRelationship[typeCode=SUBJ]/source[classCode=ACT,moodCode=EVN]"
* substitution -> ".outboundRelationship[typeCode=COMP].target[classCode=SUBST, moodCode=EVN]"
* substitution.wasSubstituted -> ".actionNegationInd"
* substitution.type -> ".code"
* substitution.reason -> ".reasonCode"
* substitution.responsibleParty -> ".participation[typeCode=PFM].role[classCode=ASSIGN]"
* detectedIssue -> ".inboundRelationship[typeCode=SUBJ]/source[classCode=ALRT,moodCode=EVN].value"
* eventHistory -> ".inboundRelationship(typeCode=SUBJ].source[classCode=CACT, moodCode=EVN]"